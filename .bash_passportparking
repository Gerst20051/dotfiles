# PassportParking Aliases

# Grep Current Directory for Phrase
function f {
	grep -r "$1" *
}

function flog {
	glp | grep "$1"
}

function newbug {
	if [ "$#" -ne 1 ]; then
		echo "1 argument required, $# provided"
		return
	fi
	echo $1 | grep -E -q '^[0-9]+$'
	if [ $? -ne 0 ]; then
		echo "Numeric argument required, $1 provided"
		return
	fi
	git checkout production &&
	git pull origin production &&
	git checkout -b bug_"$1"
}

function syncbug {
	if [ "$#" -ne 1 ]; then
		echo "1 argument required, $# provided"
		return
	fi
	echo $1 | grep -E -q '^[0-9]+$'
	if [ $? -ne 0 ]; then
		echo "Numeric argument required, $1 provided"
		return
	fi
	git checkout production &&
	git pull origin production &&
	git checkout bug_"$1" &&
	git merge --no-ff -m "Merge branch production into 'bug_$1'" production
}

function syncbugstag {
	if [ "$#" -ne 1 ]; then
		echo "1 argument required, $# provided"
		return
	fi
	echo $1 | grep -E -q '^[0-9]+$'
	if [ $? -ne 0 ]; then
		echo "Numeric argument required, $1 provided"
		return
	fi
	git checkout staging &&
	git pull origin staging &&
	git checkout bug_"$1" &&
	git merge --no-ff -m "Merge branch staging into 'bug_$1'" staging
}

function mergebug {
	if [ "$#" -ne 1 ]; then
		echo "1 argument required, $# provided"
		return
	fi
	echo $1 | grep -E -q '^[0-9]+$'
	if [ $? -ne 0 ]; then
		echo "Numeric argument required, $1 provided"
		return
	fi
	git checkout bug_"$1" &&
	git commit -m "updated bug_$1"
}

function mergeall {
	if [ "$#" -ne 1 ]; then
		echo "1 argument required, $# provided"
		return
	fi
	echo $1 | grep -E -q '^[0-9]+$'
	if [ $? -ne 0 ]; then
		echo "Numeric argument required, $1 provided"
		return
	fi
        mergedev "$@" &&
        mergestag "$@" &&
        mergeprod "$@"
}

function mergedev {
	if [ "$#" -ne 1 ]; then
		echo "1 argument required, $# provided"
		return
	fi
	echo $1 | grep -E -q '^[0-9]+$'
	if [ $? -ne 0 ]; then
		echo "Numeric argument required, $1 provided"
		return
	fi
	git checkout bug_"$1" &&
	git checkout development &&
	git pull origin development &&
	git merge --no-ff -m "Merge branch 'bug_$1' into development" bug_"$1" &&
        git push origin development &&
        git checkout bug_"$1"
}

function mergestag {
	if [ "$#" -ne 1 ]; then
		echo "1 argument required, $# provided"
		return
	fi
	echo $1 | grep -E -q '^[0-9]+$'
	if [ $? -ne 0 ]; then
		echo "Numeric argument required, $1 provided"
		return
	fi 
	git checkout bug_"$1" &&
	git checkout staging &&
	git pull origin staging &&
	git merge --no-ff -m "Merge branch 'bug_$1' into staging" bug_"$1" &&
        git push origin staging &&
        git checkout bug_"$1"
}

function mergeprod {
	if [ "$#" -ne 1 ]; then
		echo "1 argument required, $# provided"
		return
	fi
	echo $1 | grep -E -q '^[0-9]+$'
	if [ $? -ne 0 ]; then
		echo "Numeric argument required, $1 provided"
		return
	fi 
	git checkout bug_"$1" &&
	git checkout production &&
	git pull origin production &&
	git merge --no-ff -m "Merge branch 'bug_$1' into production" bug_"$1" &&
        git push origin production &&
        git checkout bug_"$1"
}

function syncbranches {
	git fetch
	echo $'\n'
	git checkout development &&
	git pull origin development
	echo $'\n'
	git checkout staging &&
	git pull origin staging
	echo $'\n'
	git checkout production &&
	git pull origin production
}

function syncmasterbranch {
	git fetch
	echo $'\n'
	git checkout master &&
	git pull origin master
}

function syncrepos {
        pwd=${PWD}
        remote="origin"
        repos=('custom' 'mobile')
        echo $'\n\E[35m'
        echo "Syncing Repos: ${repos[@]}"
        sleep 2
        for repo in "${repos[@]}"; do
		echo $'\n\E[31m'
		message="Syncing Repo '"
		message+=$'\E[36m'
		message+=$repo
		message+=$'\E[31m'
		message+="' Branches"
		message+=$'\E[37m'
		function="syncbranches"
		if [[
			$repo == "centralpay" ||
			$repo == "centralpaydevice" ||
			$repo == "db" ||
			$repo == "initscripts" ||
			$repo == "kegerator" ||
			$repo == "migration" ||
			$repo == "mobileapp" ||
			$repo == "operator" ||
			$repo == "ppconfig" ||
			$repo == "produpdate" ||
			$repo == "reservations" ||
			$repo == "sandbox" ||
			$repo == "test" ||
			$repo == "testing"
		]]; then
			function="syncmasterbranch"
		fi
		echo $repo
		\cd ~/PP/Code/$repo &&
	        ${function}
                sleep 2
        done
        echo $'\n\n\E[31m'
        message="Finished Syncing All Repo Branches! Current Directory: "
        message+=$'\E[33m'
        message+="${pwd}"
        message+=$'\E[37m'
        echo $message && echo $'\n' &&
        cd ${pwd}
}

alias lsyncdcustom="sudo lsyncd '/Users/passport/lsyncd/ppconfig/repocustom.lua'"
alias lsyncddp2="sudo lsyncd '/Users/passport/lsyncd/ppconfig/repodelayedproc2.lua'"
alias lsyncdmpw="sudo lsyncd '/Users/passport/lsyncd/ppconfig/repomobilepayweb.lua'"
alias lsyncdmobile="sudo lsyncd '/Users/passport/lsyncd/ppconfig/repomobile.lua'"
alias lsyncdnot="sudo lsyncd '/Users/passport/lsyncd/ppconfig/reponotifications.lua'"
alias lsyncdopmgmt="sudo lsyncd '/Users/passport/lsyncd/ppconfig/repoopmgmt.lua'"
alias lsyncdpm="sudo lsyncd '/Users/passport/lsyncd/ppconfig/repoparkmonitor.lua'"
alias lsyncdpg="sudo lsyncd '/Users/passport/lsyncd/ppconfig/repopaymentgateway.lua'"
alias lsyncdppc="sudo lsyncd '/Users/passport/lsyncd/ppconfig/repoppconfig.lua'"
alias lsyncdrate="sudo lsyncd '/Users/passport/lsyncd/ppconfig/reporate.lua'"
alias lsyncdshared="sudo lsyncd '/Users/passport/lsyncd/ppconfig/reposhared.lua'"
alias lsyncdstrings="sudo lsyncd '/Users/passport/lsyncd/ppconfig/repostrings.lua'"
alias lsyncdvalidation="sudo lsyncd '/Users/passport/lsyncd/ppconfig/repovalidation.lua'"
alias lsyncdviolations="sudo lsyncd '/Users/passport/lsyncd/ppconfig/repoviolations.lua'"

